// <auto-generated />
using System;
using Infra.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lupy.Infra.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250305174804_Pilot")]
    partial class Pilot
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lupy.Domain.Entities.Clinic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CLINIC");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATION_DATE");

                    b.Property<string>("CreationUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CREATION_USER");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFICATION_DATE");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MODIFICATION_USER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PK_CLINIC");

                    b.ToTable("CLINIC", (string)null);
                });

            modelBuilder.Entity("Lupy.Domain.Entities.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_PET");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("AGE");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATION_DATE");

                    b.Property<string>("CreationUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CREATION_USER");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("ID_TUTOR");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFICATION_DATE");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MODIFICATION_USER");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PK_PET");

                    b.HasIndex("IdUser");

                    b.ToTable("PET", (string)null);
                });

            modelBuilder.Entity("Lupy.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATION_DATE");

                    b.Property<string>("CreationUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CREATION_USER");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFICATION_DATE");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MODIFICATION_USER");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NAME");

                    b.HasKey("Id");

                    b.ToTable("ROLES", (string)null);
                });

            modelBuilder.Entity("Lupy.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_USER");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cellphone")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CELLPHONE");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATION_DATE");

                    b.Property<string>("CreationUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CREATION_USER");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EMAIL");

                    b.Property<int>("IdClinic")
                        .HasColumnType("int")
                        .HasColumnName("CLINIC_ID");

                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("ID_ROLE");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFICATION_DATE");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MODIFICATION_USER");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PASSWORD");

                    b.HasKey("Id")
                        .HasName("PK_USER");

                    b.HasIndex("IdClinic");

                    b.HasIndex("IdRole");

                    b.ToTable("USERS", (string)null);
                });

            modelBuilder.Entity("Lupy.Domain.Entities.Vaccine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_VACCINE");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Batch")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BATCH");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATION_DATE");

                    b.Property<string>("CreationUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CREATION_USER");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EXPIRATION_DATE");

                    b.Property<int>("IdClinic")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLINIC");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFICATION_DATE");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MODIFICATION_USER");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NAME");

                    b.HasKey("Id")
                        .HasName("PK_VACCINE");

                    b.HasIndex("IdClinic");

                    b.ToTable("VACCINE", (string)null);
                });

            modelBuilder.Entity("Lupy.Domain.Entities.VaccinePet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_VACCINE_PET");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATION_DATE");

                    b.Property<string>("CreationUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CREATION_USER");

                    b.Property<int>("IdClinic")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLINIC");

                    b.Property<int>("IdPet")
                        .HasColumnType("int")
                        .HasColumnName("ID_PET");

                    b.Property<int>("IdVaccine")
                        .HasColumnType("int")
                        .HasColumnName("ID_VACCINE");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("MODIFICATION_DATE");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("MODIFICATION_USER");

                    b.HasKey("Id")
                        .HasName("PK_VACCINE_PET");

                    b.HasIndex("IdClinic");

                    b.HasIndex("IdPet");

                    b.HasIndex("IdVaccine");

                    b.ToTable("VACCINE_PET", (string)null);
                });

            modelBuilder.Entity("Lupy.Domain.Entities.Pet", b =>
                {
                    b.HasOne("Lupy.Domain.Entities.User", "User")
                        .WithMany("Pet")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Lupy.Domain.Entities.User", b =>
                {
                    b.HasOne("Lupy.Domain.Entities.Clinic", "Clinic")
                        .WithMany("Users")
                        .HasForeignKey("IdClinic")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lupy.Domain.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Lupy.Domain.Entities.Vaccine", b =>
                {
                    b.HasOne("Lupy.Domain.Entities.Clinic", "Clinic")
                        .WithMany("Vaccines")
                        .HasForeignKey("IdClinic")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VACCINE_CLINIC");

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("Lupy.Domain.Entities.VaccinePet", b =>
                {
                    b.HasOne("Lupy.Domain.Entities.Clinic", "Clinic")
                        .WithMany("VaccinePet")
                        .HasForeignKey("IdClinic")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_VACCINE_PET_CLINIC");

                    b.HasOne("Lupy.Domain.Entities.Pet", "Pet")
                        .WithMany("VaccinePet")
                        .HasForeignKey("IdPet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VACCINEPET_PET");

                    b.HasOne("Lupy.Domain.Entities.Vaccine", "Vaccine")
                        .WithMany("VaccinePet")
                        .HasForeignKey("IdVaccine")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_VACCINEPET_VACCINE");

                    b.Navigation("Clinic");

                    b.Navigation("Pet");

                    b.Navigation("Vaccine");
                });

            modelBuilder.Entity("Lupy.Domain.Entities.Clinic", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("VaccinePet");

                    b.Navigation("Vaccines");
                });

            modelBuilder.Entity("Lupy.Domain.Entities.Pet", b =>
                {
                    b.Navigation("VaccinePet");
                });

            modelBuilder.Entity("Lupy.Domain.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Lupy.Domain.Entities.User", b =>
                {
                    b.Navigation("Pet");
                });

            modelBuilder.Entity("Lupy.Domain.Entities.Vaccine", b =>
                {
                    b.Navigation("VaccinePet");
                });
#pragma warning restore 612, 618
        }
    }
}
